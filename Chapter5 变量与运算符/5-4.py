'''
5-4 列表的可变 与 元组的不可变

主要讲的是tuple 和 list 之间的区别 


list 列表的特性

    >>> a=[1,2,3]       定义一个a 列表 
    >>> id(a)           把这个列表的内存地址列出来 内存地址一般用16进制表示会好一点 
    57838888            我们发现这个内存的地址为 57838888
                                >>> hex(id(a))
                                '0x3728d28'
    >>> a[0] = '1'      当我们改变 a 列表中的第一个元素 
    >>> print(a)        我们打印a 确定 a列表已经被改变了 
    ['1', 2, 3]         
    >>> id(a)           再次我们打印一下 a 改变后的id 地址 
    57838888            我们发现 这是同一个地址  所以列表的更改是在同一个id 地址上的 而不会建立一个新的.

    >>> b=[1,2,3]
    >>> b.append(4)     append() 方法用于在列表末尾添加新的对象。
    >>> print(b)
    [1, 2, 3, 4]


tuple 元组的特性

    >>> a=(1,2,3)                                                   设定一个元组a 元组中有三个元素
    >>> a(0) = '1'                                                  当我们尝试去更改a元组中的第一个元素为 字符串 1 的时候
    SyntaxError: can't assign to function call                      系统就会报错 
    >>> a=(1,2,3)                                                   设定一个元组a 同样里面有三个元素
    >>> a.append(4)                                                 当我们尝试去调用append方法在里面增加一个新的元素4的时候
    Traceback (most recent call last):                              系统报错！
      File "<pyshell#3>", line 1, in <module>
        a.append(4)
    AttributeError: 'tuple' object has no attribute 'append'


多维数组的访问：
a=(1,2,3,[1,2,4])  这种元组里面包括列表的形式 叫做 多维元组  现在的a是一个 2维元组
访问 3, a[2] ======>  3
访问 4, a[3] ======>  [1,2,4]  我们找到了元组的第四个元素 list [1,2,4]
        a[3][2] =====> 4  我们要继续在这个列表中访问第2个元素 得到 4   

在这里列举一个三维的元组：
    a=(1,2,3,[1,2,[a,b,c]])
                  ======= 
             =============
       =====================

如果要在这个三维元组中
访问 b:   a[3][2][1] ==========>  b


多维数组的更改：
还是拿二维元组举例  a=(1,2,3,[1,2,4]) 


 a[3][2] = '3' 
 
修改2： >>> a=(1,2,3,[1,2,4])
        >>> a[1] = 3
        Traceback (most recent call last):              
          File "<pyshell#1>", line 1, in <module>                               这会报错 因为元组的元素是不能被修改的
            a[1] = 3
        TypeError: 'tuple' object does not support item assignment
        
修改4： >>> a[3][2] = '3'
        >>> print(a)
        (1, 2, 3, [1, 2, '3'])       只修改 list 就会成功 运行成功 

虽然元组tuple 是不可改变的 但是这是改变数组list中的元素 list中的元素是可以修改的 


'''



